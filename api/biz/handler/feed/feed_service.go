// Code generated by hertz generator.

package feed

import (
	"context"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	apiLog "github.com/prometheus/common/log"
	"simple-douyin/api/biz/client"
	mw "simple-douyin/api/biz/middleware"
	bizFeed "simple-douyin/api/biz/model/feed"
	"simple-douyin/kitex_gen/feed"
)

// Feed .
// @router /douyin/feed/ [GET]
func Feed(ctx context.Context, c *app.RequestContext) {
	var err error
	var bizReq bizFeed.FeedRequest
	err = c.BindAndValidate(&bizReq)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	var userId int64
	// 这里对token进行校验
	if bizReq.Token != nil {
		_, err := mw.JwtMiddleware.ParseTokenString(*bizReq.Token)
		if err != nil {
			apiLog.Fatal(err)
		}
		_, err = mw.JwtMiddleware.CheckIfTokenExpire(ctx, c)
		if err != nil {
			apiLog.Fatal(err)
		}
		claims, err := mw.JwtMiddleware.GetClaimsFromJWT(ctx, c)
		if err != nil {
			apiLog.Fatal(err)
		}
		userId = claims[mw.IdentityKey].(int64)
	}

	req := feed.FeedRequest{
		UserId:     &userId,
		LatestTime: bizReq.LatestTime,
	}

	resp, err := client.Feed(ctx, &req)

	if err != nil {
		apiLog.Fatal(err)
	}

	c.JSON(consts.StatusOK, resp)
}
