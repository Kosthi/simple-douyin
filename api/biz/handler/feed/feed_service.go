// Code generated by hertz generator.

package feed

import (
	"context"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	apiLog "github.com/prometheus/common/log"
	client "simple-douyin/api/biz/client"
	mw "simple-douyin/api/biz/middleware"
	bizFeed "simple-douyin/api/biz/model/feed"
)

// Feed .
// @router /douyin/feed/ [GET]
func Feed(ctx context.Context, c *app.RequestContext) {
	var err error
	var req bizFeed.FeedRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	// 这里对token进行校验
	if req.Token != nil {
		_, err := mw.JwtMiddleware.ParseTokenString(*req.Token)
		if err != nil {
			apiLog.Fatal(err)
		}
		_, err = mw.JwtMiddleware.CheckIfTokenExpire(ctx, c)
		if err != nil {
			apiLog.Fatal(err)
		}
	}

	//latestTime, err := strconv.ParseInt(c.Query("latest_time"), 10, 64)
	//if err != nil {
	//	c.String(consts.StatusBadRequest, "Wrong time!")
	//}
	//token := c.Query("token")
	//req = bizFeed.FeedRequest{
	//	LatestTime: &latestTime,
	//	Token:      &token,
	//}

	resp, err := client.Feed(ctx, &req)

	if err != nil {
		apiLog.Fatal(err)
	}

	c.JSON(consts.StatusOK, resp)
}
